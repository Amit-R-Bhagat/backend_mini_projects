openapi: "3.0.0"
info:
  title: learning swagger
  description: api docs for myapp
  version: 1.0.0
  contact:
    email: amitbhagat963@gmail.com

servers:
  - url: "{protocol}://localhost:3000/api/{version}"
    description: for localhost
    variables:
      version:
        enum:
          - v1
          - v2
        default: v1
      protocol:
        enum:
          - http
          - https
        default: http

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token

    BearerAuth:
      type: http
      scheme: bearer

paths:
  /myapp:
    get:
      tags:
        - String
      summary: returns a greet message from myapp
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: string
                example: "mystring"
        
        400:
          description: bad request
        
        500:
          description: server error

  /myappobject:
    get:
      tags:
        - Object
      summary: returns a course
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        
        400:
          description: bad request
        
        500:
          description: server error

  /myapparray:
    get:
      tags:
        - Array
      summary: returns a array
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
        
        400:
          description: bad request
        
        500:
          description: server error

  /course/{courseId}:
    get:
      tags:
        - String
      summary: returns a array
      parameters:
        - name: courseId
          in: path
          required: true
          default: 33
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        
        400:
          description: bad request
        
        500:
          description: server error

  /addCourse:
    post:
      tags:
        - String
      summary: adds a new course to existing courses
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content: 
          application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
      responses:
        200:
          description: success
          content:
            application/json:
                      
        400:
          description: bad request
        
        500:
          description: server error

  /coursequery:
    get:
      tags:
        - String
      summary: query
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
            enum: [delhi, london, nagpur]
        - name: device
          in: query
          required: true
          schema:
            type: string
            enum: [web, mobile]
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties: 
                  location: 
                    type: string
                  device: 
                    type: string
                      
        400:
          description: bad request
        
        500:
          description: server error

  /courseupload:
    post:
      tags:
        - String
      summary: file upload
      requestBody:
        content: 
          multipart/form-data:
            schema:
              type: object
              properties:
                file: 
                  type: string
                  format: binary
      responses:
        200:
          description: success
                                
        400:
          description: bad request
        
        500:
          description: server error